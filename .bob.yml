- command:
   name: debug
   execute:
      - gprbuild -P hunter.gpr
   description: Build Hunter in debug mode
- command:
   name: release
   execute:
      - others/build.tcl
   description: Build Hunter in release mode
- command:
   name: analyze
   execute:
      - gprbuild -P hunter.gpr -XMode=analyze
   description: Build Hunter in analyze mode
- command:
   name: clean
   execute:
      - gprclean -P hunter.gpr
   description: Clean all compilation files
- command:
   name: docs
   execute:
      - others/generatedocs.tcl
   description: Generate code documentation
- command:
   name: gprof
   execute:
      - gprof bin/hunter gmon.out
   description: Generate gprof report
- command:
   name: buildall
   execute:
      - bob release
      - bob debug
   description: Build Hunter release then debug version
- command:
   name: generatetranslation
   execute:
      - others/translations.tcl generate
   description: (Re)Generate ROOT translation of the program
- command:
   name: createtranslation
   execute:
      - others/translations.tcl create $1
   description: Create a new translation for the selected language
- command:
   name: updatetranslations
   execute:
      - others/translations.tcl update
   description: Update all existing translations (except ROOT)
- command:
   name: pretty
   execute:
      - gnatpp -P hunter.gpr
      - gnatpp -P hunter.gpr -XUI=console
   description: Pretty print Hunter source code
- command:
   name: push
   execute:
      - fossil push
      - fossil git export --force
   description: Update remote Fossil repository and its Git mirror
- command:
   name: debugconsole
   execute:
      - gprbuild -P hunter.gpr -XUI=console
   description: Build Hunter in debug mode with console UI
- command:
   name: releaseconsole
   execute:
      - others/build.tcl console
   description: Build Hunter in release mode with console UI
- command:
   name: check
   execute:
      - sudo docker run --rm -w /app -v $1:/app ghcr.io/thindil/adacontrol:9 /bin/bash others/check.tcl
   description: Run AdaControl to check correctness of the code required argument is full path to the program source code
   flags:
      - unixpath
- command:
   name: checkall
   execute:
      - bob debug
      - bob check
   description: Run all the project tests
- command:
   name: checkfile
   execute:
      - sudo docker run --rm -w /app -v $1:/app ghcr.io/thindil/adacontrol:9 /bin/bash others/check.tcl $2
   description: Run AdaControl to check correctness of the selected file. Required arguments are full path to the program source code and relative path to the file which will be check
   flags:
      - unixpath
