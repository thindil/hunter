
Description="Ada2012"

Categories = {"source"}


Keywords={
    { Id=1,
      List={"abort", "else", "new", "return", "abs", "elsif", "not", "reverse",
            "abstract", "end", "null", "accept", "entry", "select", "access", "exception",
            "separate", "aliased", "exit", "of", "subtype", "all", "or", "and", "for",
            "others", "tagged", "array", "function", "out", "task", "at", "terminate",
            "generic", "package", "then", "begin", "goto", "pragma", "type", "body",
            "private", "if", "procedure", "case", "in", "protected", "until", "constant",
            "is", "use", "raise", "declare", "range", "when", "delay", "limited", "record",
            "while", "delta", "loop", "rem", "with", "digits", "renames", "do", "mod",
            "requeue", "xor", "interface", "limited", "overriding", "some", "synchronized"},
      },
    { Id=2,
      List={"boolean", "integer", "natural", "positive", "float", "character",
            "string", "duration", "short_integer", "long_integer", "short_float",
            "long_float", "unbounded_string", "address", "storage_offset", "storage_count",
            "storage_element", "storage_array", "wide_character", "wide_string",
            "short_short_integer", "long_long_integer", "short_short_float", "long_long_float",
            "wide_wide_character", "wide_wide_string", "wide_unbounded_string",
            "wide_wide_unbounded_string"},
      },
    { Id=3,
      List={"true", "false"},
      },
    { Id=3,
      Regex=[[''']],
      },
    { Id=4,
      List={"aligment", "all_calls_remote", "asynchronous", "atomic", "atomic_components",
            "attach_handler", "bit_order", "coding", "component_size", "constant_indexing",
            "convention", "cpu", "default_component_value", "default_iterator", "default_storage_pool",
            "default_value", "discard_names", "dispatching_domain", "dynamic_predicate",
            "elaborate_body", "exclusive_functions", "export", "external_name", "external_tag",
            "implicit_dereference", "improt", "independent", "inline", "input", "interrupt_handler",
            "interrupt_priority", "iterator_element", "layout", "link_name", "machine_radix",
            "no_return", "output", "pack", "post", "pre", "predicate_failure", "preelaborate",
            "priority", "pure", "read", "relative_deadline", "remote_call_interface", "remote_types",
            "shared_passive", "size", "small", "static_predicate", "storage_pool", "storage_size",
            "steam_size", "synchronization", "type_invariant", "unchecked_union", "variable_indexing",
            "volatile", "volatile_components", "write"}
      },
    { Id=4,
      Regex=[[ [\w\)]+('\w+) ]],
      }
}

-- Workaround: distinguish string delimiters and event markers
-- (same eymbol: ')

--workaround for special string '''

Strings={
    Delimiter=[["|']],
    Escape = [[ \\[^'] ]]
}

IgnoreCase=true

Comments={
    { Block=false,
      Delimiter= { [[\-\-]] },
      },
    }

Operators=[[\(|\)|\[|\]|\{|\}|\,|\;|\:|\&|<|>|\!|\=|\/|\*|\%|\+|\-|\.]]

